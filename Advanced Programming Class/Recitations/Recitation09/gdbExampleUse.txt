 elk01:~/cs2213/Recitations/Recitation09> gcc -g try1.c -o try1.exe
elk01:~/cs2213/Recitations/Recitation09> ./try1.exe
In main():
   x is 5 and is stored at 0xbffff6f0.
   xptr points to 0xbffff6f0 which holds 5.
In display():
   z is 5 and is stored at 0xbffff6d0.
   zptr points to 0xbffff6f0 which holds 5.
elk01:~/cs2213/Recitations/Recitation09> gdb try1.exe
GNU gdb 6.8-debian
Copyright (C) 2008 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i486-linux-gnu"...
(gdb) run
Starting program: /home/icapistr/cs2213/Recitations/Recitation09/try1.exe 
In main():
   x is 5 and is stored at 0xbffff5e0.
   xptr points to 0xbffff5e0 which holds 5.
In display():
   z is 5 and is stored at 0xbffff5c0.
   zptr points to 0xbffff5e0 which holds 5.

Program exited normally.
(gdb) list
1       #include <stdio.h>
2       static void display(int i, int *ptr);
3
4       int main(void) {
5          int x = 5;
6               int *xptr = &x;
7               printf("In main():\n");
8          printf("   x is %d and is stored at %p.\n", x, &x);
9          printf("   xptr points to %p which holds %d.\n", xptr, *xptr);
10         display(x, xptr);
(gdb) break 10
Breakpoint 1 at 0x8048454: file try1.c, line 10.
(gdb) run
Starting program: /home/icapistr/cs2213/Recitations/Recitation09/try1.exe 
In main():
   x is 5 and is stored at 0xbffff5e0.
   xptr points to 0xbffff5e0 which holds 5.

Breakpoint 1, main () at try1.c:10
10         display(x, xptr);
(gdb) print x
$1 = 5
(gdb) print xptr
$2 = (int *) 0xbffff5e0
(gdb) next
In display():
   z is 5 and is stored at 0xbffff5c0.
   zptr points to 0xbffff5e0 which holds 5.
11         return 0;
(gdb) continue
Continuing.

Program exited normally.
(gdb) list
6               int *xptr = &x;
7               printf("In main():\n");
8          printf("   x is %d and is stored at %p.\n", x, &x);
9          printf("   xptr points to %p which holds %d.\n", xptr, *xptr);
10         display(x, xptr);
11         return 0;
12      }
13
14      void display(int z, int *zptr) {
15              printf("In display():\n");
(gdb) break 15
Breakpoint 2 at 0x804847a: file try1.c, line 15.
(gdb) run
Starting program: /home/icapistr/cs2213/Recitations/Recitation09/try1.exe 
In main():
   x is 5 and is stored at 0xbffff5e0.
   xptr points to 0xbffff5e0 which holds 5.

Breakpoint 1, main () at try1.c:10
10         display(x, xptr);
(gdb) backtrace
#0  main () at try1.c:10
(gdb) next

Breakpoint 2, display (z=5, zptr=0xbffff5e0) at try1.c:15
15              printf("In display():\n");
(gdb) backtrace
#0  display (z=5, zptr=0xbffff5e0) at try1.c:15
#1  0x08048466 in main () at try1.c:10
(gdb) print x
No symbol "x" in current context.
(gdb) print z
$3 = 5
(gdb) print zptr
$4 = (int *) 0xbffff5e0
(gdb) backtrace
#0  display (z=5, zptr=0xbffff5e0) at try1.c:15
#1  0x08048466 in main () at try1.c:10
(gdb) frame 1
#1  0x08048466 in main () at try1.c:10
10         display(x, xptr);
(gdb) print xptr
$5 = (int *) 0xbffff5e0
(gdb) continue
Continuing.
In display():
   z is 5 and is stored at 0xbffff5c0.
   zptr points to 0xbffff5e0 which holds 5.

Program exited normally.
(gdb) exit
Undefined command: "exit".  Try "help".
(gdb) quit
elk01:~/cs2213/Recitations/Recitation09> 
